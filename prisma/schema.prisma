// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = "postgresql://Float:Float@localhost:5432/float"
}


model Users {
  id                 BigInt               @id @default(autoincrement())
  first              String               
  last               String               
  email              String             
  password           String               
  createdAt          DateTime             @default(now())
  lastLogin          DateTime?
  updatedAt          DateTime             @updatedAt
  updatedBy          Int?
  accounts           UserAccount[]
}

enum accountType {
  checkings
  savings
  credit
}


model UserAccount{
  id                BigInt @id @default(autoincrement())
  accountNumber     BigInt 
  provider          String 
  nickName          String 
  balance           Float
  intrest           Float?
  maxBalance        Float?
  type              accountType @default(checkings)
  userid            BigInt
  user              Users @relation(fields: [userid], references: [id], onDelete: Cascade)
  transactions      Transactions[]  
}


model TransactionsCategory{
  id               BigInt @id @default(autoincrement())
  name             String 
  icon             String 
  color            String 
  description      String 
  transactions     Transactions[]
}

 enum transactionsTypes {
  purchase
  creditCardPayment
  savingsDeposit
  reoccuring
  income
}

model Transactions{
  id               BigInt @id @default(autoincrement())
  amount           Float 
  accountid        BigInt
  company          String 
  categoryid       BigInt
  type             transactionsTypes @default(purchase)
  Frequency        Int?
  date             DateTime
  dateAdded        DateTime @updatedAt
  category         TransactionsCategory @relation(fields: [categoryid], references: [id], onDelete: NoAction )
  account          UserAccount @relation(fields: [accountid], references: [id], onDelete: Cascade )
}
